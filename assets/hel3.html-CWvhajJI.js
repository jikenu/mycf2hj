import{_ as n,c as s,o as a,a as t}from"./app-BKdByfKa.js";const p={},e=t(`<p>hel3 代码日志 3Kmfi6HP/EDtunnel</p><h1 id="hel3-code" tabindex="-1"><a class="header-anchor" href="#hel3-code"><span>hel3 code</span></a></h1><p><strong>from 3Kmfi6HP/EDtunnel</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">//注：3Kmfi6HP/EDtunnel  的脚本 2024.05.02日更新  解决10011  需要删除worker重新创建</span></span>
<span class="line"><span class="token comment">//注： https://hel3.2961819202.workers.dev/9afa0f97-643e-4c22-8156-dfa49bfcd88b  替换自定义域：</span></span>
<span class="line"><span class="token comment">//注： https://pre.mycf2hj.top/9afa0f97-643e-4c22-8156-dfa49bfcd88b       界面挑选</span></span>
<span class="line"><span class="token comment">//注： 此 代码  订阅器  疑似可替换？  大概第75行</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">// @ts-ignore</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cloudflare:sockets&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// How to generate your own UUID:</span></span>
<span class="line"><span class="token comment">// [Windows] Press &quot;Win + R&quot;, input cmd and run:  Powershell -NoExit -Command &quot;[guid]::NewGuid()&quot;</span></span>
<span class="line"><span class="token keyword">let</span> userID <span class="token operator">=</span> <span class="token string">&#39;9afa0f97-643e-4c22-8156-dfa49bfcd88b&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> พร็อกซีไอพีs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;cdn.xn--b6gac.eu.org&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cdn-all.xn--b6gac.eu.org&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;workers.cloudflare.cyou&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// if you want to use ipv6 or single พร็อกซีไอพี, please add comment at this line and remove comment at the next line</span></span>
<span class="line"><span class="token keyword">let</span> พร็อกซีไอพี <span class="token operator">=</span> พร็อกซีไอพีs<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> พร็อกซีไอพีs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// use single พร็อกซีไอพี instead of random</span></span>
<span class="line"><span class="token comment">// let พร็อกซีไอพี = &#39;cdn.xn--b6gac.eu.org&#39;;</span></span>
<span class="line"><span class="token comment">// ipv6 พร็อกซีไอพี example remove comment to use</span></span>
<span class="line"><span class="token comment">// let พร็อกซีไอพี = &quot;[2a01:4f8:c2c:123f:64:5:6810:c55a]&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> dohURL <span class="token operator">=</span> <span class="token string">&#39;https://sky.rethinkdns.com/1:-Pf_____9_8A_AMAIgE8kMABVDDmKOHTAKg=&#39;</span><span class="token punctuation">;</span> <span class="token comment">// https://cloudflare-dns.com/dns-query or https://dns.google/dns-query</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isValidUUID</span><span class="token punctuation">(</span>userID<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;uuid is invalid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Request<span class="token punctuation">}</span></span> <span class="token parameter">request</span></span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span>UUID<span class="token operator">:</span> string<span class="token punctuation">,</span> พร็อกซีไอพี<span class="token operator">:</span> string<span class="token punctuation">,</span> DNS_RESOLVER_URL<span class="token operator">:</span> string<span class="token punctuation">,</span> NODE_ID<span class="token operator">:</span> int<span class="token punctuation">,</span> API_HOST<span class="token operator">:</span> string<span class="token punctuation">,</span> API_TOKEN<span class="token operator">:</span> string<span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token parameter">env</span></span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ExecutionContext<span class="token punctuation">}</span></span> <span class="token parameter">ctx</span></span>
<span class="line">	 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span>Response<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span></span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token keyword">async</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> env<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// uuid_validator(request);</span></span>
<span class="line">		<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">			userID <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">UUID</span> <span class="token operator">||</span> userID<span class="token punctuation">;</span></span>
<span class="line">			พร็อกซีไอพี <span class="token operator">=</span> env<span class="token punctuation">.</span>พร็อกซีไอพี <span class="token operator">||</span> พร็อกซีไอพี<span class="token punctuation">;</span></span>
<span class="line">			dohURL <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">DNS_RESOLVER_URL</span> <span class="token operator">||</span> dohURL<span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">let</span> userID_Path <span class="token operator">=</span> userID<span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>userID<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				userID_Path <span class="token operator">=</span> userID<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			<span class="token keyword">const</span> upgradeHeader <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;Upgrade&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>upgradeHeader <span class="token operator">||</span> upgradeHeader <span class="token operator">!==</span> <span class="token string">&#39;websocket&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">switch</span> <span class="token punctuation">(</span>url<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">case</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/cf</span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>cf<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">								<span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json;charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">					<span class="token keyword">case</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userID_Path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">const</span> วเลสConfig <span class="token operator">=</span> <span class="token keyword">get</span><span class="token function">วเลสConfig</span><span class="token punctuation">(</span>userID<span class="token punctuation">,</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>วเลสConfig<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">								<span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/html; charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token punctuation">}</span></span>
<span class="line">						<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">case</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/sub/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userID_Path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> searchParams <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> วเลสSubConfig <span class="token operator">=</span> <span class="token function">สร้างวเลสSub</span><span class="token punctuation">(</span>userID<span class="token punctuation">,</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token comment">// Construct and return response object</span></span>
<span class="line">						<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token function">btoa</span><span class="token punctuation">(</span>วเลสSubConfig<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">								<span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/plain;charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token punctuation">}</span></span>
<span class="line">						<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">case</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/bestip/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userID_Path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">const</span> headers <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://sub.xf.free.hr/auto?host=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;uuid=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;path=/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> bestSubConfig <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">headers</span><span class="token operator">:</span> headers <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">return</span> bestSubConfig<span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">						<span class="token comment">// return new Response(&#39;Not found&#39;, { status: 404 });</span></span>
<span class="line">						<span class="token comment">// For any other path, reverse proxy to &#39;ramdom website&#39; and return the original response, caching it in the process</span></span>
<span class="line">						<span class="token keyword">const</span> randomHostname <span class="token operator">=</span> cn_hostnames<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> cn_hostnames<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> newHeaders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						newHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;cf-connecting-ip&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.2.3.4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						newHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;x-forwarded-for&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.2.3.4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						newHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;x-real-ip&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1.2.3.4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						newHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;referer&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https://www.google.com/search?q=edtunnel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token comment">// Use fetch to proxy the request to 15 different domains</span></span>
<span class="line">						<span class="token keyword">const</span> proxyUrl <span class="token operator">=</span> <span class="token string">&#39;https://&#39;</span> <span class="token operator">+</span> randomHostname <span class="token operator">+</span> url<span class="token punctuation">.</span>pathname <span class="token operator">+</span> url<span class="token punctuation">.</span>search<span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">let</span> modifiedRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span>proxyUrl<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token literal-property property">method</span><span class="token operator">:</span> request<span class="token punctuation">.</span>method<span class="token punctuation">,</span></span>
<span class="line">							<span class="token literal-property property">headers</span><span class="token operator">:</span> newHeaders<span class="token punctuation">,</span></span>
<span class="line">							<span class="token literal-property property">body</span><span class="token operator">:</span> request<span class="token punctuation">.</span>body<span class="token punctuation">,</span></span>
<span class="line">							<span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;manual&#39;</span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> proxyResponse <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>modifiedRequest<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;manual&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token comment">// Check for 302 or 301 redirect status and return an error response</span></span>
<span class="line">						<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">301</span><span class="token punctuation">,</span> <span class="token number">302</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>proxyResponse<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Redirects to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>randomHostname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> are not allowed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">								<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">403</span><span class="token punctuation">,</span></span>
<span class="line">								<span class="token literal-property property">statusText</span><span class="token operator">:</span> <span class="token string">&#39;Forbidden&#39;</span><span class="token punctuation">,</span></span>
<span class="line">							<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token punctuation">}</span></span>
<span class="line">						<span class="token comment">// Return the response from the proxy server</span></span>
<span class="line">						<span class="token keyword">return</span> proxyResponse<span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">วเลสOverWSHandler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>Error<span class="token punctuation">}</span></span> */</span> <span class="token keyword">let</span> e <span class="token operator">=</span> err<span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">uuid_validator</span><span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> hostname <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> currentDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> subdomain <span class="token operator">=</span> hostname<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> year <span class="token operator">=</span> currentDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> month <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> day <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>currentDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> formattedDate <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>month<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>day<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// const daliy_sub = formattedDate + subdomain</span></span>
<span class="line">	<span class="token keyword">const</span> hashHex <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">hashHex_f</span><span class="token punctuation">(</span>subdomain<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// subdomain string contains timestamps utc and uuid string TODO.</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hashHex<span class="token punctuation">,</span> subdomain<span class="token punctuation">,</span> formattedDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">hashHex_f</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> data <span class="token operator">=</span> encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> hashBuffer <span class="token operator">=</span> <span class="token keyword">await</span> crypto<span class="token punctuation">.</span>subtle<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;SHA-256&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> hashArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>hashBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> hashHex <span class="token operator">=</span> hashArray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">byte</span> <span class="token operator">=&gt;</span> byte<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">return</span> hashHex<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Handles วเลส over WebSocket requests by creating a WebSocket pair, accepting the WebSocket connection, and processing the วเลส header.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Request<span class="token punctuation">}</span></span> <span class="token parameter">request</span> The incoming request object.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span>Response<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> A Promise that resolves to a WebSocket response object.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">วเลสOverWSHandler</span><span class="token punctuation">(</span><span class="token parameter">request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> webSocketPair <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocketPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>client<span class="token punctuation">,</span> webSocket<span class="token punctuation">]</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>webSocketPair<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	webSocket<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">let</span> address <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> portWithRandomLog <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> currentDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> log <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> */</span> info<span class="token punctuation">,</span> <span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>string <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span></span> */</span> event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>currentDate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>portWithRandomLog<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">] </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> event <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> earlyDataHeader <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;sec-websocket-protocol&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> readableWebSocketStream <span class="token operator">=</span> <span class="token function">makeReadableWebSocketStream</span><span class="token punctuation">(</span>webSocket<span class="token punctuation">,</span> earlyDataHeader<span class="token punctuation">,</span> log<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span> value<span class="token operator">:</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Socket <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>*/</span></span>
<span class="line">	<span class="token keyword">let</span> remoteSocketWapper <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> udpStreamWrite <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> isDns <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// ws --&gt; remote</span></span>
<span class="line">	readableWebSocketStream<span class="token punctuation">.</span><span class="token function">pipeTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WritableStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">async</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>isDns <span class="token operator">&amp;&amp;</span> udpStreamWrite<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token function">udpStreamWrite</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>remoteSocketWapper<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> writer <span class="token operator">=</span> remoteSocketWapper<span class="token punctuation">.</span>value<span class="token punctuation">.</span>writable<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">				<span class="token keyword">await</span> writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				writer<span class="token punctuation">.</span><span class="token function">releaseLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">const</span> <span class="token punctuation">{</span></span>
<span class="line">				hasError<span class="token punctuation">,</span></span>
<span class="line">				message<span class="token punctuation">,</span></span>
<span class="line">				portRemote <span class="token operator">=</span> <span class="token number">443</span><span class="token punctuation">,</span></span>
<span class="line">				addressRemote <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">				rawDataIndex<span class="token punctuation">,</span></span>
<span class="line">				วเลสVersion <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">				isUDP<span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">processวเลสHeader</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> userID<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			address <span class="token operator">=</span> addressRemote<span class="token punctuation">;</span></span>
<span class="line">			portWithRandomLog <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>portRemote<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isUDP <span class="token operator">?</span> <span class="token string">&#39;udp&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;tcp&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>hasError<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token comment">// controller.error(message);</span></span>
<span class="line">				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// cf seems has bug, controller.error will not end stream</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			<span class="token comment">// If UDP and not DNS port, close it</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>isUDP <span class="token operator">&amp;&amp;</span> portRemote <span class="token operator">!==</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;UDP proxy only enabled for DNS which is port 53&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">// cf seems has bug, controller.error will not end stream</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>isUDP <span class="token operator">&amp;&amp;</span> portRemote <span class="token operator">===</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				isDns <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			<span class="token comment">// [&quot;version&quot;, &quot;附加信息长度 N&quot;]</span></span>
<span class="line">			<span class="token keyword">const</span> วเลสResponseHeader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span>วเลสVersion<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> rawClientData <span class="token operator">=</span> chunk<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>rawDataIndex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">			<span class="token comment">// TODO: support udp here when cf runtime has udp support</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>isDns<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> <span class="token punctuation">{</span> write <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">handleUDPOutBound</span><span class="token punctuation">(</span>webSocket<span class="token punctuation">,</span> วเลสResponseHeader<span class="token punctuation">,</span> log<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				udpStreamWrite <span class="token operator">=</span> write<span class="token punctuation">;</span></span>
<span class="line">				<span class="token function">udpStreamWrite</span><span class="token punctuation">(</span>rawClientData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			<span class="token function">handleTCPOutBound</span><span class="token punctuation">(</span>remoteSocketWapper<span class="token punctuation">,</span> addressRemote<span class="token punctuation">,</span> portRemote<span class="token punctuation">,</span> rawClientData<span class="token punctuation">,</span> webSocket<span class="token punctuation">,</span> วเลสResponseHeader<span class="token punctuation">,</span> log<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">readableWebSocketStream is close</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token function">abort</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">readableWebSocketStream is abort</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;readableWebSocketStream pipeTo error&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">101</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">webSocket</span><span class="token operator">:</span> client<span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Handles outbound TCP connections.</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>any<span class="token punctuation">}</span></span> <span class="token parameter">remoteSocket</span> </span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">addressRemote</span> The remote address to connect to.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">portRemote</span> The remote port to connect to.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span></span> <span class="token parameter">rawClientData</span> The raw client data to write.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WebSocket<span class="token punctuation">}</span></span> <span class="token parameter">webSocket</span> The WebSocket to pass the remote socket to.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span></span> <span class="token parameter">วเลสResponseHeader</span> The วเลส response header.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">function</span><span class="token punctuation">}</span></span> <span class="token parameter">log</span> The logging function.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> The remote socket.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleTCPOutBound</span><span class="token punctuation">(</span><span class="token parameter">remoteSocket<span class="token punctuation">,</span> addressRemote<span class="token punctuation">,</span> portRemote<span class="token punctuation">,</span> rawClientData<span class="token punctuation">,</span> webSocket<span class="token punctuation">,</span> วเลสResponseHeader<span class="token punctuation">,</span> log<span class="token punctuation">,</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * Connects to a given address and port and writes data to the socket.</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">address</span> The address to connect to.</span>
<span class="line">	 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">port</span> The port to connect to.</span>
<span class="line">	 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Socket<span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> A Promise that resolves to the connected socket.</span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">connectAndWrite</span><span class="token punctuation">(</span><span class="token parameter">address<span class="token punctuation">,</span> port</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Socket<span class="token punctuation">}</span></span> */</span></span>
<span class="line">		<span class="token keyword">const</span> tcpSocket <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">hostname</span><span class="token operator">:</span> address<span class="token punctuation">,</span></span>
<span class="line">			<span class="token literal-property property">port</span><span class="token operator">:</span> port<span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		remoteSocket<span class="token punctuation">.</span>value <span class="token operator">=</span> tcpSocket<span class="token punctuation">;</span></span>
<span class="line">		<span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">connected to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> writer <span class="token operator">=</span> tcpSocket<span class="token punctuation">.</span>writable<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">await</span> writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>rawClientData<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// first write, nomal is tls client hello</span></span>
<span class="line">		writer<span class="token punctuation">.</span><span class="token function">releaseLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> tcpSocket<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token doc-comment comment">/**</span>
<span class="line">	 * Retries connecting to the remote address and port if the Cloudflare socket has no incoming data.</span>
<span class="line">	 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> A Promise that resolves when the retry is complete.</span>
<span class="line">	 */</span></span>
<span class="line">	<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">retry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">const</span> tcpSocket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">connectAndWrite</span><span class="token punctuation">(</span>พร็อกซีไอพี <span class="token operator">||</span> addressRemote<span class="token punctuation">,</span> portRemote<span class="token punctuation">)</span></span>
<span class="line">		tcpSocket<span class="token punctuation">.</span>closed<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;retry tcpSocket closed error&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token function">safeCloseWebSocket</span><span class="token punctuation">(</span>webSocket<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token function">remoteSocketToWS</span><span class="token punctuation">(</span>tcpSocket<span class="token punctuation">,</span> webSocket<span class="token punctuation">,</span> วเลสResponseHeader<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> log<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> tcpSocket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">connectAndWrite</span><span class="token punctuation">(</span>addressRemote<span class="token punctuation">,</span> portRemote<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// when remoteSocket is ready, pass to websocket</span></span>
<span class="line">	<span class="token comment">// remote--&gt; ws</span></span>
<span class="line">	<span class="token function">remoteSocketToWS</span><span class="token punctuation">(</span>tcpSocket<span class="token punctuation">,</span> webSocket<span class="token punctuation">,</span> วเลสResponseHeader<span class="token punctuation">,</span> retry<span class="token punctuation">,</span> log<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Creates a readable stream from a WebSocket server, allowing for data to be read from the WebSocket.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WebSocket<span class="token punctuation">}</span></span> <span class="token parameter">webSocketServer</span> The WebSocket server to create the readable stream from.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">earlyDataHeader</span> The header containing early data for WebSocket 0-RTT.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">(</span>info<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">}</span></span> <span class="token parameter">log</span> The logging function.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>ReadableStream<span class="token punctuation">}</span></span> A readable stream that can be used to read data from the WebSocket.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">makeReadableWebSocketStream</span><span class="token punctuation">(</span><span class="token parameter">webSocketServer<span class="token punctuation">,</span> earlyDataHeader<span class="token punctuation">,</span> log</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">let</span> readableStreamCancel <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReadableStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter">controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			webSocketServer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> message <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span></span>
<span class="line">				controller<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">			webSocketServer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token function">safeCloseWebSocket</span><span class="token punctuation">(</span>webSocketServer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				controller<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">			webSocketServer<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;webSocketServer has error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				controller<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> <span class="token punctuation">{</span> earlyData<span class="token punctuation">,</span> error <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">base64ToArrayBuffer</span><span class="token punctuation">(</span>earlyDataHeader<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				controller<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>earlyData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				controller<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>earlyData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">		<span class="token function">pull</span><span class="token punctuation">(</span><span class="token parameter">controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">// if ws can stop read if stream is full, we can implement backpressure</span></span>
<span class="line">			<span class="token comment">// https://streams.spec.whatwg.org/#example-rs-push-backpressure</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">		<span class="token function">cancel</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ReadableStream was canceled, due to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reason<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">			readableStreamCancel <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token function">safeCloseWebSocket</span><span class="token punctuation">(</span>webSocketServer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> stream<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// https://xtls.github.io/development/protocols/วเลส.html</span></span>
<span class="line"><span class="token comment">// https://github.com/zizifn/excalidraw-backup/blob/main/v2ray-protocol.excalidraw</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Processes the วเลส header buffer and returns an object with the relevant information.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>ArrayBuffer<span class="token punctuation">}</span></span> <span class="token parameter">วเลสBuffer</span> The วเลส header buffer to process.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userID</span> The user ID to validate against the UUID in the วเลส header.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span></span>
<span class="line"> <span class="token operator">*</span>  hasError<span class="token operator">:</span> boolean<span class="token punctuation">,</span></span>
<span class="line"> <span class="token operator">*</span>  message<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span></span>
<span class="line"> <span class="token operator">*</span>  addressRemote<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">,</span></span>
<span class="line"> <span class="token operator">*</span>  addressType<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="line"> <span class="token operator">*</span>  portRemote<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="line"> <span class="token operator">*</span>  rawDataIndex<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="line"> <span class="token operator">*</span>  วเลสVersion<span class="token operator">?</span><span class="token operator">:</span> Uint8Array<span class="token punctuation">,</span></span>
<span class="line"> <span class="token operator">*</span>  isUDP<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
<span class="line"> <span class="token operator">*</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> An object with the relevant information extracted from the วเลส header buffer.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">processวเลสHeader</span><span class="token punctuation">(</span><span class="token parameter">วเลสBuffer<span class="token punctuation">,</span> userID</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>วเลสBuffer<span class="token punctuation">.</span>byteLength <span class="token operator">&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;invalid data&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> version <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> isValidUser <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> isUDP <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> slicedBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> slicedBufferString <span class="token operator">=</span> <span class="token function">stringify</span><span class="token punctuation">(</span>slicedBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// check if userID is valid uuid or uuids split by , and contains userID in it otherwise return error message to console</span></span>
<span class="line">	<span class="token keyword">const</span> uuids <span class="token operator">=</span> userID<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> userID<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span>userID<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// uuid_validator(hostName, slicedBufferString);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// isValidUser = uuids.some(userUuid =&gt; slicedBufferString === userUuid.trim());</span></span>
<span class="line">	isValidUser <span class="token operator">=</span> uuids<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">userUuid</span> <span class="token operator">=&gt;</span> slicedBufferString <span class="token operator">===</span> userUuid<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> uuids<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> slicedBufferString <span class="token operator">===</span> uuids<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">userID: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>slicedBufferString<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isValidUser<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;invalid user&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> optLength <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">//skip opt for now</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> command <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span></span>
<span class="line">		วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">18</span> <span class="token operator">+</span> optLength<span class="token punctuation">,</span> <span class="token number">18</span> <span class="token operator">+</span> optLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 0x01 TCP</span></span>
<span class="line">	<span class="token comment">// 0x02 UDP</span></span>
<span class="line">	<span class="token comment">// 0x03 MUX</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		isUDP <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		isUDP <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">command </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>command<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not support, command 01-tcp,02-udp,03-mux</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">const</span> portIndex <span class="token operator">=</span> <span class="token number">18</span> <span class="token operator">+</span> optLength <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> portBuffer <span class="token operator">=</span> วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>portIndex<span class="token punctuation">,</span> portIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// port is big-Endian in raw data etc 80 == 0x005d</span></span>
<span class="line">	<span class="token keyword">const</span> portRemote <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>portBuffer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUint16</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">let</span> addressIndex <span class="token operator">=</span> portIndex <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> addressBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span></span>
<span class="line">		วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>addressIndex<span class="token punctuation">,</span> addressIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 1--&gt; ipv4  addressLength =4</span></span>
<span class="line">	<span class="token comment">// 2--&gt; domain name addressLength=addressBuffer[1]</span></span>
<span class="line">	<span class="token comment">// 3--&gt; ipv6  addressLength =16</span></span>
<span class="line">	<span class="token keyword">const</span> addressType <span class="token operator">=</span> addressBuffer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> addressLength <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> addressValueIndex <span class="token operator">=</span> addressIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> addressValue <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">switch</span> <span class="token punctuation">(</span>addressType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span></span>
<span class="line">			addressLength <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">			addressValue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span></span>
<span class="line">				วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>addressValueIndex<span class="token punctuation">,</span> addressValueIndex <span class="token operator">+</span> addressLength<span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span></span>
<span class="line">			addressLength <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span></span>
<span class="line">				วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>addressValueIndex<span class="token punctuation">,</span> addressValueIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			addressValueIndex <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">			addressValue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span></span>
<span class="line">				วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>addressValueIndex<span class="token punctuation">,</span> addressValueIndex <span class="token operator">+</span> addressLength<span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span></span>
<span class="line">			addressLength <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> dataView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span></span>
<span class="line">				วเลสBuffer<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>addressValueIndex<span class="token punctuation">,</span> addressValueIndex <span class="token operator">+</span> addressLength<span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token comment">// 2001:0db8:85a3:0000:0000:8a2e:0370:7334</span></span>
<span class="line">			<span class="token keyword">const</span> ipv6 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				ipv6<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dataView<span class="token punctuation">.</span><span class="token function">getUint16</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			addressValue <span class="token operator">=</span> ipv6<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token comment">// seems no need add [] for ipv6</span></span>
<span class="line">			<span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">			<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">invild  addressType is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>addressType<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>addressValue<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">addressValue is empty, addressType is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>addressType<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">hasError</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">addressRemote</span><span class="token operator">:</span> addressValue<span class="token punctuation">,</span></span>
<span class="line">		addressType<span class="token punctuation">,</span></span>
<span class="line">		portRemote<span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">rawDataIndex</span><span class="token operator">:</span> addressValueIndex <span class="token operator">+</span> addressLength<span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">วเลสVersion</span><span class="token operator">:</span> version<span class="token punctuation">,</span></span>
<span class="line">		isUDP<span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Converts a remote socket to a WebSocket connection.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Socket<span class="token punctuation">}</span></span> <span class="token parameter">remoteSocket</span> The remote socket to convert.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WebSocket<span class="token punctuation">}</span></span> <span class="token parameter">webSocket</span> The WebSocket to connect to.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>ArrayBuffer <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token parameter">วเลสResponseHeader</span> The วเลส response header.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token parameter">retry</span> The function to retry the connection if it fails.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">(</span>info<span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">}</span></span> <span class="token parameter">log</span> The logging function.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>Promise<span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span><span class="token punctuation">}</span></span> A Promise that resolves when the conversion is complete.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">remoteSocketToWS</span><span class="token punctuation">(</span><span class="token parameter">remoteSocket<span class="token punctuation">,</span> webSocket<span class="token punctuation">,</span> วเลสResponseHeader<span class="token punctuation">,</span> retry<span class="token punctuation">,</span> log</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// remote--&gt; ws</span></span>
<span class="line">	<span class="token keyword">let</span> remoteChunkCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> chunks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>ArrayBuffer <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">}</span></span> */</span></span>
<span class="line">	<span class="token keyword">let</span> วเลสHeader <span class="token operator">=</span> วเลสResponseHeader<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">let</span> hasIncomingData <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// check if remoteSocket has incoming data</span></span>
<span class="line">	<span class="token keyword">await</span> remoteSocket<span class="token punctuation">.</span>readable</span>
<span class="line">		<span class="token punctuation">.</span><span class="token function">pipeTo</span><span class="token punctuation">(</span></span>
<span class="line">			<span class="token keyword">new</span> <span class="token class-name">WritableStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">				<span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token doc-comment comment">/**</span>
<span class="line">				 * </span>
<span class="line">				 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span></span> <span class="token parameter">chunk</span> </span>
<span class="line">				 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">controller</span> </span>
<span class="line">				 */</span></span>
<span class="line">				<span class="token keyword">async</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					hasIncomingData <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">					remoteChunkCount<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>webSocket<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token constant">WS_READY_STATE_OPEN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						controller<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span></span>
<span class="line">							<span class="token string">&#39;webSocket.readyState is not open, maybe close&#39;</span></span>
<span class="line">						<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>วเลสHeader<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						webSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>วเลสHeader<span class="token punctuation">,</span> chunk<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						วเลสHeader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token comment">// console.log(\`remoteSocketToWS send chunk \${chunk.byteLength}\`);</span></span>
<span class="line">						<span class="token comment">// seems no need rate limit this, CF seems fix this??..</span></span>
<span class="line">						<span class="token comment">// if (remoteChunkCount &gt; 20000) {</span></span>
<span class="line">						<span class="token comment">// 	// cf one package is 4096 byte(4kb),  4096 * 20000 = 80M</span></span>
<span class="line">						<span class="token comment">// 	await delay(1);</span></span>
<span class="line">						<span class="token comment">// }</span></span>
<span class="line">						webSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">remoteConnection!.readable is close with hasIncomingData is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hasIncomingData<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token comment">// safeCloseWebSocket(webSocket); // no need server close websocket frist for some case will casue HTTP ERR_CONTENT_LENGTH_MISMATCH issue, client will send close event anyway.</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token function">abort</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">remoteConnection!.readable abort</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span></span>
<span class="line">				<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">remoteSocketToWS has exception </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">				error<span class="token punctuation">.</span>stack <span class="token operator">||</span> error</span>
<span class="line">			<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token function">safeCloseWebSocket</span><span class="token punctuation">(</span>webSocket<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// seems is cf connect socket have error,</span></span>
<span class="line">	<span class="token comment">// 1. Socket.closed will have error</span></span>
<span class="line">	<span class="token comment">// 2. Socket.readable will be close without any data coming</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>hasIncomingData <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> retry<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">retry</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token function">retry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Decodes a base64 string into an ArrayBuffer.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">base64Str</span> The base64 string to decode.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span>earlyData<span class="token operator">:</span> ArrayBuffer<span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">,</span> error<span class="token operator">:</span> Error<span class="token operator">|</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span> An object containing the decoded ArrayBuffer or null if there was an error, and any error that occurred during decoding or null if there was no error.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">base64ToArrayBuffer</span><span class="token punctuation">(</span><span class="token parameter">base64Str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>base64Str<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">earlyData</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// go use modified Base64 for URL rfc4648 which js atob not support</span></span>
<span class="line">		base64Str <span class="token operator">=</span> base64Str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">_</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> decode <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>base64Str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> arryBuffer <span class="token operator">=</span> Uint8Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>decode<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> c<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">earlyData</span><span class="token operator">:</span> arryBuffer<span class="token punctuation">.</span>buffer<span class="token punctuation">,</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">earlyData</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> error <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Checks if a given string is a valid UUID.</span>
<span class="line"> * Note: This is not a real UUID validation.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">uuid</span> The string to validate as a UUID.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>boolean<span class="token punctuation">}</span></span> True if the string is a valid UUID, false otherwise.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">isValidUUID</span><span class="token punctuation">(</span><span class="token parameter">uuid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> uuidRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">return</span> uuidRegex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">WS_READY_STATE_OPEN</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">WS_READY_STATE_CLOSING</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Closes a WebSocket connection safely without throwing exceptions.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WebSocket<span class="token punctuation">}</span></span> <span class="token parameter">socket</span> The WebSocket connection to close.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">safeCloseWebSocket</span><span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>socket<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token constant">WS_READY_STATE_OPEN</span> <span class="token operator">||</span> socket<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token constant">WS_READY_STATE_CLOSING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;safeCloseWebSocket error&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> byteToHex <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	byteToHex<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">unsafeStringify</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> offset <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token punctuation">(</span>byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> byteToHex<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>offset <span class="token operator">+</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">stringify</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> offset <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> uuid <span class="token operator">=</span> <span class="token function">unsafeStringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isValidUUID</span><span class="token punctuation">(</span>uuid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;Stringified UUID is invalid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token keyword">return</span> uuid<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * Handles outbound UDP traffic by transforming the data into DNS queries and sending them over a WebSocket connection.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@cloudflare/workers-types&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WebSocket<span class="token punctuation">}</span></span> <span class="token parameter">webSocket</span> The WebSocket connection to send the DNS queries over.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>ArrayBuffer<span class="token punctuation">}</span></span> <span class="token parameter">วเลสResponseHeader</span> The วเลส response header.</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">}</span></span> <span class="token parameter">log</span> The logging function.</span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token punctuation">{</span>write<span class="token operator">:</span> <span class="token punctuation">(</span>chunk<span class="token operator">:</span> Uint8Array<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span> An object with a write method that accepts a Uint8Array chunk to write to the transform stream.</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleUDPOutBound</span><span class="token punctuation">(</span><span class="token parameter">webSocket<span class="token punctuation">,</span> วเลสResponseHeader<span class="token punctuation">,</span> log</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">let</span> isวเลสHeaderSent <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> transformStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransformStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter">controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">// udp message 2 byte is the the length of udp data</span></span>
<span class="line">			<span class="token comment">// TODO: this should have bug, beacsue maybe udp chunk can be in two websocket message</span></span>
<span class="line">			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> chunk<span class="token punctuation">.</span>byteLength<span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> lengthBuffer <span class="token operator">=</span> chunk<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">const</span> udpPakcetLength <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>lengthBuffer<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getUint16</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">const</span> udpData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span></span>
<span class="line">					chunk<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> udpPakcetLength<span class="token punctuation">)</span></span>
<span class="line">				<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				index <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> udpPakcetLength<span class="token punctuation">;</span></span>
<span class="line">				controller<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>udpData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token function">flush</span><span class="token punctuation">(</span><span class="token parameter">controller</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// only handle dns udp for now</span></span>
<span class="line">	transformStream<span class="token punctuation">.</span>readable<span class="token punctuation">.</span><span class="token function">pipeTo</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WritableStream</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">async</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>dohURL<span class="token punctuation">,</span> <span class="token comment">// dns server url</span></span>
<span class="line">				<span class="token punctuation">{</span></span>
<span class="line">					<span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token string-property property">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/dns-message&#39;</span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token literal-property property">body</span><span class="token operator">:</span> chunk<span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">const</span> dnsQueryResult <span class="token operator">=</span> <span class="token keyword">await</span> resp<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> udpSize <span class="token operator">=</span> dnsQueryResult<span class="token punctuation">.</span>byteLength<span class="token punctuation">;</span></span>
<span class="line">			<span class="token comment">// console.log([...new Uint8Array(dnsQueryResult)].map((x) =&gt; x.toString(16)));</span></span>
<span class="line">			<span class="token keyword">const</span> udpSizeBuffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>udpSize <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">,</span> udpSize <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>webSocket<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token constant">WS_READY_STATE_OPEN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">doh success and dns message length is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>udpSize<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span>isวเลสHeaderSent<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					webSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>udpSizeBuffer<span class="token punctuation">,</span> dnsQueryResult<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">					webSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>วเลสResponseHeader<span class="token punctuation">,</span> udpSizeBuffer<span class="token punctuation">,</span> dnsQueryResult<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					isวเลสHeaderSent <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;dns udp has error&#39;</span> <span class="token operator">+</span> error<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> writer <span class="token operator">=</span> transformStream<span class="token punctuation">.</span>writable<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token doc-comment comment">/**</span>
<span class="line">		 * </span>
<span class="line">		 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Uint8Array<span class="token punctuation">}</span></span> <span class="token parameter">chunk</span> </span>
<span class="line">		 */</span></span>
<span class="line">		<span class="token function">write</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> at <span class="token operator">=</span> <span class="token string">&#39;QA==&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> pt <span class="token operator">=</span> <span class="token string">&#39;dmxlc3M=&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> ed <span class="token operator">=</span> <span class="token string">&#39;RUR0dW5uZWw=&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> *</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">userID</span> - single or comma separated userIDs</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token parameter">hostName</span></span>
<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token keyword">get</span><span class="token function">วเลสConfig</span><span class="token punctuation">(</span><span class="token parameter">userIDs<span class="token punctuation">,</span> hostName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> commonUrlPart <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">:443?encryption=none&amp;security=tls&amp;sni=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;fp=randomized&amp;type=ws&amp;host=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;path=%2F%3Fed%3D2048#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> hashSeparator <span class="token operator">=</span> <span class="token string">&quot;################################################################&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// Split the userIDs into an array</span></span>
<span class="line">	<span class="token keyword">const</span> userIDArray <span class="token operator">=</span> userIDs<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// Prepare output string for each userID</span></span>
<span class="line">	<span class="token keyword">const</span> output <span class="token operator">=</span> userIDArray<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">userID</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">const</span> วเลสMain <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>pt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> userID <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span> <span class="token operator">+</span> hostName <span class="token operator">+</span> commonUrlPart<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> วเลสSec <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>pt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> userID <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span> <span class="token operator">+</span> พร็อกซีไอพี <span class="token operator">+</span> commonUrlPart<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;h2&gt;UUID: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userID<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/h2&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hashSeparator<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nv2ray default ip</span>
<span class="line">---------------------------------------------------------------</span>
<span class="line"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>วเลสMain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"></span>
<span class="line">&lt;button onclick=&#39;copyToClipboard(&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>วเลสMain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;)&#39;&gt;&lt;i class=&quot;fa fa-clipboard&quot;&gt;&lt;/i&gt; Copy วเลสMain&lt;/button&gt;</span>
<span class="line">---------------------------------------------------------------</span>
<span class="line">v2ray with bestip</span>
<span class="line">---------------------------------------------------------------</span>
<span class="line"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>วเลสSec<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"></span>
<span class="line">&lt;button onclick=&#39;copyToClipboard(&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>วเลสSec<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;)&#39;&gt;&lt;i class=&quot;fa fa-clipboard&quot;&gt;&lt;/i&gt; Copy วเลสSec&lt;/button&gt;</span>
<span class="line">---------------------------------------------------------------</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> sublink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/sub/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userIDArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?format=clash</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">	<span class="token keyword">const</span> subbestip <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/bestip/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userIDArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> clash_link <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://api.v1.mk/sub?target=clash&amp;url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>sublink<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;insert=false&amp;emoji=true&amp;list=false&amp;tfo=false&amp;scv=true&amp;fdn=false&amp;sort=false&amp;new_name=true</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// Prepare header string</span></span>
<span class="line">	<span class="token keyword">const</span> header <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">&lt;p align=&#39;center&#39;&gt;&lt;img src=&#39;https://cloudflare-ipfs.com/ipfs/bafybeigd6i5aavwpr6wvnwuyayklq3omonggta4x2q7kpmgafj357nkcky&#39; alt=&#39;图片描述&#39; style=&#39;margin-bottom: -50px;&#39;&gt;</span>
<span class="line">&lt;b style=&#39;font-size: 15px;&#39;&gt;Welcome! This function generates configuration for วเลส protocol. If you found this useful, please check our GitHub project for more:&lt;/b&gt;</span>
<span class="line">&lt;b style=&#39;font-size: 15px;&#39;&gt;欢迎！这是生成 วเลส 协议的配置。如果您发现这个项目很好用，请查看我们的 GitHub 项目给我一个star：&lt;/b&gt;</span>
<span class="line">&lt;a href=&#39;https://github.com/3Kmfi6HP/EDtunnel&#39; target=&#39;_blank&#39;&gt;EDtunnel - https://github.com/3Kmfi6HP/EDtunnel&lt;/a&gt;</span>
<span class="line">&lt;iframe src=&#39;https://ghbtns.com/github-btn.html?user=USERNAME&amp;repo=REPOSITORY&amp;type=star&amp;count=true&amp;size=large&#39; frameborder=&#39;0&#39; scrolling=&#39;0&#39; width=&#39;170&#39; height=&#39;30&#39; title=&#39;GitHub&#39;&gt;&lt;/iframe&gt;</span>
<span class="line">&lt;a href=&#39;//</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/sub/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userIDArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; target=&#39;_blank&#39;&gt;วเลส 节点订阅连接&lt;/a&gt;</span>
<span class="line">&lt;a href=&#39;clash://install-config?url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/sub/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userIDArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?format=clash</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}&#39; target=&#39;_blank&#39;&gt;Clash for Windows 节点订阅连接&lt;/a&gt;</span>
<span class="line">&lt;a href=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>clash_link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; target=&#39;_blank&#39;&gt;Clash 节点订阅连接&lt;/a&gt;</span>
<span class="line">&lt;a href=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subbestip<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; target=&#39;_blank&#39;&gt;优选IP自动节点订阅&lt;/a&gt;</span>
<span class="line">&lt;a href=&#39;clash://install-config?url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>subbestip<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; target=&#39;_blank&#39;&gt;Clash优选IP自动&lt;/a&gt;</span>
<span class="line">&lt;a href=&#39;sing-box://import-remote-profile?url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>subbestip<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; target=&#39;_blank&#39;&gt;singbox优选IP自动&lt;/a&gt;</span>
<span class="line">&lt;a href=&#39;sn://subscription?url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>subbestip<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; target=&#39;_blank&#39;&gt;nekobox优选IP自动&lt;/a&gt;</span>
<span class="line">&lt;a href=&#39;v2rayng://install-config?url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>subbestip<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; target=&#39;_blank&#39;&gt;v2rayNG优选IP自动&lt;/a&gt;&lt;/p&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// HTML Head with CSS and FontAwesome library</span></span>
<span class="line">	<span class="token keyword">const</span> htmlHead <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  &lt;head&gt;</span>
<span class="line">	&lt;title&gt;EDtunnel: วเลส configuration&lt;/title&gt;</span>
<span class="line">	&lt;meta name=&#39;description&#39; content=&#39;This is a tool for generating วเลส protocol configurations. Give us a star on GitHub https://github.com/3Kmfi6HP/EDtunnel if you found it useful!&#39;&gt;</span>
<span class="line">	&lt;meta name=&#39;keywords&#39; content=&#39;EDtunnel, cloudflare pages, cloudflare worker, severless&#39;&gt;</span>
<span class="line">	&lt;meta name=&#39;viewport&#39; content=&#39;width=device-width, initial-scale=1&#39;&gt;</span>
<span class="line">	&lt;meta property=&#39;og:site_name&#39; content=&#39;EDtunnel: วเลส configuration&#39; /&gt;</span>
<span class="line">	&lt;meta property=&#39;og:type&#39; content=&#39;website&#39; /&gt;</span>
<span class="line">	&lt;meta property=&#39;og:title&#39; content=&#39;EDtunnel - วเลส configuration and subscribe output&#39; /&gt;</span>
<span class="line">	&lt;meta property=&#39;og:description&#39; content=&#39;Use cloudflare pages and worker severless to implement วเลส protocol&#39; /&gt;</span>
<span class="line">	&lt;meta property=&#39;og:url&#39; content=&#39;https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/&#39; /&gt;</span>
<span class="line">	&lt;meta property=&#39;og:image&#39; content=&#39;https://api.qrserver.com/v1/create-qr-code/?size=500x500&amp;data=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">วเลส://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userIDs<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>commonUrlPart<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; /&gt;</span>
<span class="line">	&lt;meta name=&#39;twitter:card&#39; content=&#39;summary_large_image&#39; /&gt;</span>
<span class="line">	&lt;meta name=&#39;twitter:title&#39; content=&#39;EDtunnel - วเลส configuration and subscribe output&#39; /&gt;</span>
<span class="line">	&lt;meta name=&#39;twitter:description&#39; content=&#39;Use cloudflare pages and worker severless to implement วเลส protocol&#39; /&gt;</span>
<span class="line">	&lt;meta name=&#39;twitter:url&#39; content=&#39;https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hostName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/&#39; /&gt;</span>
<span class="line">	&lt;meta name=&#39;twitter:image&#39; content=&#39;https://cloudflare-ipfs.com/ipfs/bafybeigd6i5aavwpr6wvnwuyayklq3omonggta4x2q7kpmgafj357nkcky&#39; /&gt;</span>
<span class="line">	&lt;meta property=&#39;og:image:width&#39; content=&#39;1500&#39; /&gt;</span>
<span class="line">	&lt;meta property=&#39;og:image:height&#39; content=&#39;1500&#39; /&gt;</span>
<span class="line"></span>
<span class="line">	&lt;style&gt;</span>
<span class="line">	body {</span>
<span class="line">	  font-family: Arial, sans-serif;</span>
<span class="line">	  background-color: #f0f0f0;</span>
<span class="line">	  color: #333;</span>
<span class="line">	  padding: 10px;</span>
<span class="line">	}</span>
<span class="line"></span>
<span class="line">	a {</span>
<span class="line">	  color: #1a0dab;</span>
<span class="line">	  text-decoration: none;</span>
<span class="line">	}</span>
<span class="line">	img {</span>
<span class="line">	  max-width: 100%;</span>
<span class="line">	  height: auto;</span>
<span class="line">	}</span>
<span class="line"></span>
<span class="line">	pre {</span>
<span class="line">	  white-space: pre-wrap;</span>
<span class="line">	  word-wrap: break-word;</span>
<span class="line">	  background-color: #fff;</span>
<span class="line">	  border: 1px solid #ddd;</span>
<span class="line">	  padding: 15px;</span>
<span class="line">	  margin: 10px 0;</span>
<span class="line">	}</span>
<span class="line">	/* Dark mode */</span>
<span class="line">	@media (prefers-color-scheme: dark) {</span>
<span class="line">	  body {</span>
<span class="line">		background-color: #333;</span>
<span class="line">		color: #f0f0f0;</span>
<span class="line">	  }</span>
<span class="line"></span>
<span class="line">	  a {</span>
<span class="line">		color: #9db4ff;</span>
<span class="line">	  }</span>
<span class="line"></span>
<span class="line">	  pre {</span>
<span class="line">		background-color: #282a36;</span>
<span class="line">		border-color: #6272a4;</span>
<span class="line">	  }</span>
<span class="line">	}</span>
<span class="line">	&lt;/style&gt;</span>
<span class="line"></span>
<span class="line">	&lt;!-- Add FontAwesome library --&gt;</span>
<span class="line">	&lt;link rel=&#39;stylesheet&#39; href=&#39;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css&#39;&gt;</span>
<span class="line">  &lt;/head&gt;</span>
<span class="line">  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// Join output with newlines, wrap inside &lt;html&gt; and &lt;body&gt;</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">  &lt;html&gt;</span>
<span class="line">  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>htmlHead<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"></span>
<span class="line">  &lt;body&gt;</span>
<span class="line">  &lt;pre style=&#39;background-color: transparent; border: none;&#39;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>header<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/pre&gt;</span>
<span class="line">  &lt;pre&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>output<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/pre&gt;</span>
<span class="line">  &lt;/body&gt;</span>
<span class="line">  &lt;script&gt;</span>
<span class="line">	function copyToClipboard(text) {</span>
<span class="line">	  navigator.clipboard.writeText(text)</span>
<span class="line">		.then(() =&gt; {</span>
<span class="line">		  alert(&quot;Copied to clipboard&quot;);</span>
<span class="line">		})</span>
<span class="line">		.catch((err) =&gt; {</span>
<span class="line">		  console.error(&quot;Failed to copy to clipboard:&quot;, err);</span>
<span class="line">		});</span>
<span class="line">	}</span>
<span class="line">  &lt;/script&gt;</span>
<span class="line">  &lt;/html&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> เซ็ตพอร์ตHttp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">8080</span><span class="token punctuation">,</span> <span class="token number">8880</span><span class="token punctuation">,</span> <span class="token number">2052</span><span class="token punctuation">,</span> <span class="token number">2086</span><span class="token punctuation">,</span> <span class="token number">2095</span><span class="token punctuation">,</span> <span class="token number">2082</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> เซ็ตพอร์ตHttps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">443</span><span class="token punctuation">,</span> <span class="token number">8443</span><span class="token punctuation">,</span> <span class="token number">2053</span><span class="token punctuation">,</span> <span class="token number">2096</span><span class="token punctuation">,</span> <span class="token number">2087</span><span class="token punctuation">,</span> <span class="token number">2083</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">สร้างวเลสSub</span><span class="token punctuation">(</span><span class="token parameter">ไอดีผู้ใช้_เส้นทาง<span class="token punctuation">,</span> ชื่อโฮสต์</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> อาร์เรย์ไอดีผู้ใช้ <span class="token operator">=</span> ไอดีผู้ใช้_เส้นทาง<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> ไอดีผู้ใช้_เส้นทาง<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">[</span>ไอดีผู้ใช้_เส้นทาง<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> ส่วนUrlทั่วไปHttp <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">?encryption=none&amp;security=none&amp;fp=random&amp;type=ws&amp;host=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ชื่อโฮสต์<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;path=%2F%3Fed%3D2048#</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> ส่วนUrlทั่วไปHttps <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">?encryption=none&amp;security=tls&amp;sni=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ชื่อโฮสต์<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;fp=random&amp;type=ws&amp;host=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ชื่อโฮสต์<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;path=%2F%3Fed%3D2048#</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> ผลลัพธ์ <span class="token operator">=</span> อาร์เรย์ไอดีผู้ใช้<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ไอดีผู้ใช้</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">const</span> การกำหนดค่าHttp <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>เซ็ตพอร์ตHttp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">พอร์ต</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ชื่อโฮสต์<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;pages.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> ส่วนUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ชื่อโฮสต์<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-HTTP-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>พอร์ต<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">const</span> วเลสหลักHttp <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>pt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> ไอดีผู้ใช้ <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span> <span class="token operator">+</span> ชื่อโฮสต์ <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> พอร์ต <span class="token operator">+</span> ส่วนUrlทั่วไปHttp <span class="token operator">+</span> ส่วนUrl<span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">return</span> พร็อกซีไอพีs<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">พร็อกซีไอพี</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">const</span> วเลสรองHttp <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>pt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> ไอดีผู้ใช้ <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span> <span class="token operator">+</span> พร็อกซีไอพี <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> พอร์ต <span class="token operator">+</span> ส่วนUrlทั่วไปHttp <span class="token operator">+</span> ส่วนUrl <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> พร็อกซีไอพี <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>ed<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">return</span> <span class="token punctuation">[</span>วเลสหลักHttp<span class="token punctuation">,</span> วเลสรองHttp<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token keyword">const</span> การกำหนดค่าHttps <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>เซ็ตพอร์ตHttps<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">พอร์ต</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">const</span> ส่วนUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ชื่อโฮสต์<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-HTTPS-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>พอร์ต<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> วเลสหลักHttps <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>pt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> ไอดีผู้ใช้ <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span> <span class="token operator">+</span> ชื่อโฮสต์ <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> พอร์ต <span class="token operator">+</span> ส่วนUrlทั่วไปHttps <span class="token operator">+</span> ส่วนUrl<span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">return</span> พร็อกซีไอพีs<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">พร็อกซีไอพี</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> วเลสรองHttps <span class="token operator">=</span> <span class="token function">atob</span><span class="token punctuation">(</span>pt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> ไอดีผู้ใช้ <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span> <span class="token operator">+</span> พร็อกซีไอพี <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> พอร์ต <span class="token operator">+</span> ส่วนUrlทั่วไปHttps <span class="token operator">+</span> ส่วนUrl <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> พร็อกซีไอพี <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>ed<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token punctuation">[</span>วเลสหลักHttps<span class="token punctuation">,</span> วเลสรองHttps<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>การกำหนดค่าHttp<span class="token punctuation">,</span> <span class="token operator">...</span>การกำหนดค่าHttps<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> ผลลัพธ์<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> cn_hostnames <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token string">&#39;weibo.com&#39;</span><span class="token punctuation">,</span>                <span class="token comment">// Weibo - A popular social media platform</span></span>
<span class="line">	<span class="token string">&#39;www.baidu.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Baidu - The largest search engine in China</span></span>
<span class="line">	<span class="token string">&#39;www.qq.com&#39;</span><span class="token punctuation">,</span>               <span class="token comment">// QQ - A widely used instant messaging platform</span></span>
<span class="line">	<span class="token string">&#39;www.taobao.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Taobao - An e-commerce website owned by Alibaba Group</span></span>
<span class="line">	<span class="token string">&#39;www.jd.com&#39;</span><span class="token punctuation">,</span>               <span class="token comment">// JD.com - One of the largest online retailers in China</span></span>
<span class="line">	<span class="token string">&#39;www.sina.com.cn&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Sina - A Chinese online media company</span></span>
<span class="line">	<span class="token string">&#39;www.sohu.com&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// Sohu - A Chinese internet service provider</span></span>
<span class="line">	<span class="token string">&#39;www.tmall.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Tmall - An online retail platform owned by Alibaba Group</span></span>
<span class="line">	<span class="token string">&#39;www.163.com&#39;</span><span class="token punctuation">,</span>              <span class="token comment">// NetEase Mail - One of the major email providers in China</span></span>
<span class="line">	<span class="token string">&#39;www.zhihu.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Zhihu - A popular question-and-answer website</span></span>
<span class="line">	<span class="token string">&#39;www.youku.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Youku - A Chinese video sharing platform</span></span>
<span class="line">	<span class="token string">&#39;www.xinhuanet.com&#39;</span><span class="token punctuation">,</span>        <span class="token comment">// Xinhua News Agency - Official news agency of China</span></span>
<span class="line">	<span class="token string">&#39;www.douban.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Douban - A Chinese social networking service</span></span>
<span class="line">	<span class="token string">&#39;www.meituan.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Meituan - A Chinese group buying website for local services</span></span>
<span class="line">	<span class="token string">&#39;www.toutiao.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Toutiao - A news and information content platform</span></span>
<span class="line">	<span class="token string">&#39;www.ifeng.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// iFeng - A popular news website in China</span></span>
<span class="line">	<span class="token string">&#39;www.autohome.com.cn&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// Autohome - A leading Chinese automobile online platform</span></span>
<span class="line">	<span class="token string">&#39;www.360.cn&#39;</span><span class="token punctuation">,</span>               <span class="token comment">// 360 - A Chinese internet security company</span></span>
<span class="line">	<span class="token string">&#39;www.douyin.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Douyin - A Chinese short video platform</span></span>
<span class="line">	<span class="token string">&#39;www.kuaidi100.com&#39;</span><span class="token punctuation">,</span>        <span class="token comment">// Kuaidi100 - A Chinese express delivery tracking service</span></span>
<span class="line">	<span class="token string">&#39;www.wechat.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// WeChat - A popular messaging and social media app</span></span>
<span class="line">	<span class="token string">&#39;www.csdn.net&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// CSDN - A Chinese technology community website</span></span>
<span class="line">	<span class="token string">&#39;www.imgo.tv&#39;</span><span class="token punctuation">,</span>              <span class="token comment">// ImgoTV - A Chinese live streaming platform</span></span>
<span class="line">	<span class="token string">&#39;www.aliyun.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Alibaba Cloud - A Chinese cloud computing company</span></span>
<span class="line">	<span class="token string">&#39;www.eyny.com&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// Eyny - A Chinese multimedia resource-sharing website</span></span>
<span class="line">	<span class="token string">&#39;www.mgtv.com&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// MGTV - A Chinese online video platform</span></span>
<span class="line">	<span class="token string">&#39;www.xunlei.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Xunlei - A Chinese download manager and torrent client</span></span>
<span class="line">	<span class="token string">&#39;www.hao123.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Hao123 - A Chinese web directory service</span></span>
<span class="line">	<span class="token string">&#39;www.bilibili.com&#39;</span><span class="token punctuation">,</span>         <span class="token comment">// Bilibili - A Chinese video sharing and streaming platform</span></span>
<span class="line">	<span class="token string">&#39;www.youth.cn&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// Youth.cn - A China Youth Daily news portal</span></span>
<span class="line">	<span class="token string">&#39;www.hupu.com&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// Hupu - A Chinese sports community and forum</span></span>
<span class="line">	<span class="token string">&#39;www.youzu.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Youzu Interactive - A Chinese game developer and publisher</span></span>
<span class="line">	<span class="token string">&#39;www.panda.tv&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// Panda TV - A Chinese live streaming platform</span></span>
<span class="line">	<span class="token string">&#39;www.tudou.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Tudou - A Chinese video-sharing website</span></span>
<span class="line">	<span class="token string">&#39;www.zol.com.cn&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// ZOL - A Chinese electronics and gadgets website</span></span>
<span class="line">	<span class="token string">&#39;www.toutiao.io&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Toutiao - A news and information app</span></span>
<span class="line">	<span class="token string">&#39;www.tiktok.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// TikTok - A Chinese short-form video app</span></span>
<span class="line">	<span class="token string">&#39;www.netease.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// NetEase - A Chinese internet technology company</span></span>
<span class="line">	<span class="token string">&#39;www.cnki.net&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// CNKI - China National Knowledge Infrastructure, an information aggregator</span></span>
<span class="line">	<span class="token string">&#39;www.zhibo8.cc&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Zhibo8 - A website providing live sports streams</span></span>
<span class="line">	<span class="token string">&#39;www.zhangzishi.cc&#39;</span><span class="token punctuation">,</span>        <span class="token comment">// Zhangzishi - Personal website of Zhang Zishi, a public intellectual in China</span></span>
<span class="line">	<span class="token string">&#39;www.xueqiu.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Xueqiu - A Chinese online social platform for investors and traders</span></span>
<span class="line">	<span class="token string">&#39;www.qqgongyi.com&#39;</span><span class="token punctuation">,</span>         <span class="token comment">// QQ Gongyi - Tencent&#39;s charitable foundation platform</span></span>
<span class="line">	<span class="token string">&#39;www.ximalaya.com&#39;</span><span class="token punctuation">,</span>         <span class="token comment">// Ximalaya - A Chinese online audio platform</span></span>
<span class="line">	<span class="token string">&#39;www.dianping.com&#39;</span><span class="token punctuation">,</span>         <span class="token comment">// Dianping - A Chinese online platform for finding and reviewing local businesses</span></span>
<span class="line">	<span class="token string">&#39;www.suning.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Suning - A leading Chinese online retailer</span></span>
<span class="line">	<span class="token string">&#39;www.zhaopin.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Zhaopin - A Chinese job recruitment platform</span></span>
<span class="line">	<span class="token string">&#39;www.jianshu.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Jianshu - A Chinese online writing platform</span></span>
<span class="line">	<span class="token string">&#39;www.mafengwo.cn&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Mafengwo - A Chinese travel information sharing platform</span></span>
<span class="line">	<span class="token string">&#39;www.51cto.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// 51CTO - A Chinese IT technical community website</span></span>
<span class="line">	<span class="token string">&#39;www.qidian.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Qidian - A Chinese web novel platform</span></span>
<span class="line">	<span class="token string">&#39;www.ctrip.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Ctrip - A Chinese travel services provider</span></span>
<span class="line">	<span class="token string">&#39;www.pconline.com.cn&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// PConline - A Chinese technology news and review website</span></span>
<span class="line">	<span class="token string">&#39;www.cnzz.com&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// CNZZ - A Chinese web analytics service provider</span></span>
<span class="line">	<span class="token string">&#39;www.telegraph.co.uk&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// The Telegraph - A British newspaper website	</span></span>
<span class="line">	<span class="token string">&#39;www.ynet.com&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// Ynet - A Chinese news portal</span></span>
<span class="line">	<span class="token string">&#39;www.ted.com&#39;</span><span class="token punctuation">,</span>              <span class="token comment">// TED - A platform for ideas worth spreading</span></span>
<span class="line">	<span class="token string">&#39;www.renren.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Renren - A Chinese social networking service</span></span>
<span class="line">	<span class="token string">&#39;www.pptv.com&#39;</span><span class="token punctuation">,</span>             <span class="token comment">// PPTV - A Chinese online video streaming platform</span></span>
<span class="line">	<span class="token string">&#39;www.liepin.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Liepin - A Chinese online recruitment website</span></span>
<span class="line">	<span class="token string">&#39;www.881903.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// 881903 - A Hong Kong radio station website</span></span>
<span class="line">	<span class="token string">&#39;www.aipai.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Aipai - A Chinese online video sharing platform</span></span>
<span class="line">	<span class="token string">&#39;www.ttpaihang.com&#39;</span><span class="token punctuation">,</span>        <span class="token comment">// Ttpaihang - A Chinese celebrity popularity ranking website</span></span>
<span class="line">	<span class="token string">&#39;www.quyaoya.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Quyaoya - A Chinese online ticketing platform</span></span>
<span class="line">	<span class="token string">&#39;www.91.com&#39;</span><span class="token punctuation">,</span>               <span class="token comment">// 91.com - A Chinese software download website</span></span>
<span class="line">	<span class="token string">&#39;www.dianyou.cn&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Dianyou - A Chinese game information website</span></span>
<span class="line">	<span class="token string">&#39;www.tmtpost.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// TMTPost - A Chinese technology media platform</span></span>
<span class="line">	<span class="token string">&#39;www.douban.com&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Douban - A Chinese social networking service</span></span>
<span class="line">	<span class="token string">&#39;www.guancha.cn&#39;</span><span class="token punctuation">,</span>           <span class="token comment">// Guancha - A Chinese news and commentary website</span></span>
<span class="line">	<span class="token string">&#39;www.so.com&#39;</span><span class="token punctuation">,</span>               <span class="token comment">// So.com - A Chinese search engine</span></span>
<span class="line">	<span class="token string">&#39;www.58.com&#39;</span><span class="token punctuation">,</span>               <span class="token comment">// 58.com - A Chinese classified advertising website</span></span>
<span class="line">	<span class="token string">&#39;www.cnblogs.com&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// Cnblogs - A Chinese technology blog community</span></span>
<span class="line">	<span class="token string">&#39;www.cntv.cn&#39;</span><span class="token punctuation">,</span>              <span class="token comment">// CCTV - China Central Television official website</span></span>
<span class="line">	<span class="token string">&#39;www.secoo.com&#39;</span><span class="token punctuation">,</span>            <span class="token comment">// Secoo - A Chinese luxury e-commerce platform</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","hel3.html.vue"]]),k=JSON.parse('{"path":"/article/cloudflare/workers/hel3.html","title":"hel3 code","lang":"zh-CN","frontmatter":{"date":"2022-11-18T00:00:00.000Z","category":["VPN"],"tag":["Cloudflare","Workers"]},"headers":[],"git":{"createdTime":1717494283000,"updatedTime":1717494283000,"contributors":[{"name":"jikenu","email":"2961819202@qq.com","commits":1}]},"readingTime":{"minutes":14.07,"words":4221},"filePathRelative":"article/cloudflare/workers/hel3.md","localizedDate":"2022年11月18日","excerpt":"<p>hel3 代码日志 3Kmfi6HP/EDtunnel</p>\\n"}');export{r as comp,k as data};
