import{_ as n,c as s,o as a,a as t}from"./app-BKdByfKa.js";const p={},e=t(`<p>hel4 代码日志 cmliu/WorkerVless2sub</p><h1 id="hel4-code" tabindex="-1"><a class="header-anchor" href="#hel4-code"><span>hel4 code</span></a></h1><p>from cmliu/WorkerVless2sub</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">//注： cmliu/WorkerVless2sub 的脚本 2024.05.02日更新  无10011错误   无uuid项  </span></span>
<span class="line"><span class="token comment">//注：  https://hel4.2961819202.workers.dev/auto   直接出现vless节点码，  可绑定自定义域</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 部署完成后在网址后面加上这个，获取订阅器默认节点，/auto</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> mytoken<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;auto&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//快速订阅访问入口, 留空则不启动快速订阅</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 设置优选地址，不带端口号默认443，TLS订阅生成</span></span>
<span class="line"><span class="token keyword">let</span> addresses <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token string">&#39;icook.tw:2053#官方优选域名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token string">&#39;cloudflare.cfgo.cc#优选官方线路&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token string">&#39;sp.rweek.top:80#从hel2copy的优选线路&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token string">&#39;ali.055500.xyz:80#从hel2copy的优选线路&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 设置优选地址api接口</span></span>
<span class="line"><span class="token keyword">let</span> addressesapi <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token string">&#39;https://raw.githubusercontent.com/cmliu/WorkerVless2sub/main/addressesapi.txt&#39;</span><span class="token punctuation">,</span> <span class="token comment">//可参考内容格式 自行搭建。</span></span>
<span class="line">	<span class="token comment">//&#39;https://raw.githubusercontent.com/cmliu/WorkerVless2sub/main/addressesipv6api.txt&#39;, //IPv6优选内容格式 自行搭建。</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 设置优选地址，不带端口号默认80，noTLS订阅生成</span></span>
<span class="line"><span class="token keyword">let</span> addressesnotls <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token string">&#39;www.visa.com.sg#官方优选域名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token string">&#39;www.wto.org:8080#官方优选域名&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token string">&#39;www.who.int:8880#官方优选域名&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 设置优选noTLS地址api接口</span></span>
<span class="line"><span class="token keyword">let</span> addressesnotlsapi <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token string">&#39;https://raw.githubusercontent.com/cmliu/CFcdnVmess2sub/main/addressesapi.txt&#39;</span><span class="token punctuation">,</span> <span class="token comment">//可参考内容格式 自行搭建。</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> <span class="token constant">DLS</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token comment">//速度下限</span></span>
<span class="line"><span class="token keyword">let</span> addressescsv <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token comment">//&#39;https://raw.githubusercontent.com/cmliu/WorkerVless2sub/main/addressescsv.csv&#39;, //iptest测速结果文件。</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> subconverter <span class="token operator">=</span> <span class="token string">&quot;apiurl.v1.mk&quot;</span><span class="token punctuation">;</span> <span class="token comment">//在线订阅转换后端，目前使用肥羊的订阅转换功能。支持自建psub 可自行搭建https://github.com/bulianglin/psub</span></span>
<span class="line"><span class="token keyword">let</span> subconfig <span class="token operator">=</span> <span class="token string">&quot;https://raw.githubusercontent.com/cmliu/ACL4SSR/main/Clash/config/ACL4SSR_Online_Full_MultiMode.ini&quot;</span><span class="token punctuation">;</span> <span class="token comment">//订阅转换配置文件</span></span>
<span class="line"><span class="token keyword">let</span> noTLS <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">//改为 true , 将不做域名判断 始终返回noTLS节点</span></span>
<span class="line"><span class="token keyword">let</span> link <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> edgetunnel <span class="token operator">=</span> <span class="token string">&#39;ed&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> RproxyIP <span class="token operator">=</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> proxyIPs <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token string">&#39;proxyip.aliyun.fxxk.dedyn.io&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token string">&#39;proxyip.multacom.fxxk.dedyn.io&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token string">&#39;proxyip.vultr.fxxk.dedyn.io&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> CMproxyIPs <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token comment">//{ proxyIP: &quot;proxyip.fxxk.dedyn.io&quot;, type: &quot;HK&quot; },</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> BotToken <span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> ChatID <span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token keyword">let</span> proxyhosts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token comment">//本地代理域名池</span></span>
<span class="line">	<span class="token comment">//&#39;ppfv2tl9veojd-maillazy.pages.dev&#39;,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> proxyhostsURL <span class="token operator">=</span> <span class="token string">&#39;https://raw.githubusercontent.com/cmliu/CFcdnVmess2sub/main/proxyhosts&#39;</span><span class="token punctuation">;</span><span class="token comment">//在线代理域名池URL</span></span>
<span class="line"><span class="token keyword">let</span> EndPS <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span><span class="token comment">//节点名备注内容</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> FileName <span class="token operator">=</span> <span class="token string">&#39;WorkerVless2sub&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> SUBUpdateTime <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token keyword">let</span> total <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span><span class="token comment">//PB</span></span>
<span class="line"><span class="token comment">//let timestamp = now;</span></span>
<span class="line"><span class="token keyword">let</span> timestamp <span class="token operator">=</span> <span class="token number">4102329600000</span><span class="token punctuation">;</span><span class="token comment">//2099-12-31</span></span>
<span class="line"><span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\[.*\\]):?(\\d+)?#?(.*)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> ip<span class="token punctuation">,</span> add_data <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span> BotToken <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span> <span class="token operator">&amp;&amp;</span> ChatID <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://ip-api.com/json/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ip<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?lang=zh-CN</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">const</span> ipInfo <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			msg <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nIP: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ip<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n国家: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ipInfo<span class="token punctuation">.</span>country<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n&lt;tg-spoiler&gt;城市: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ipInfo<span class="token punctuation">.</span>city<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n组织: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ipInfo<span class="token punctuation">.</span>org<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nASN: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ipInfo<span class="token punctuation">.</span>as<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>add_data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">			msg <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\nIP: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ip<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n&lt;tg-spoiler&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>add_data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	</span>
<span class="line">		<span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;https://api.telegram.org/bot&quot;</span><span class="token operator">+</span> BotToken <span class="token operator">+</span><span class="token string">&quot;/sendMessage?chat_id=&quot;</span> <span class="token operator">+</span> ChatID <span class="token operator">+</span> <span class="token string">&quot;&amp;parse_mode=HTML&amp;text=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token string-property property">&#39;Accept&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html,application/xhtml+xml,application/xml;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token string-property property">&#39;Accept-Encoding&#39;</span><span class="token operator">:</span> <span class="token string">&#39;gzip, deflate, br&#39;</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token string-property property">&#39;User-Agent&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Mozilla/5.0 Chrome/90.0.4430.72&#39;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> MamaJustKilledAMan <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;telegram&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;twitter&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;miaoko&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getAddressesapi</span><span class="token punctuation">(</span><span class="token parameter">api</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>api <span class="token operator">||</span> api<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">let</span> newapi <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 创建一个AbortController对象，用于控制fetch请求的取消</span></span>
<span class="line">	<span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">		controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 取消所有请求</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2秒后触发</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 使用Promise.allSettled等待所有API请求完成，无论成功或失败</span></span>
<span class="line">		<span class="token comment">// 对api数组进行遍历，对每个API地址发起fetch请求</span></span>
<span class="line">		<span class="token keyword">const</span> responses <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">apiUrl</span> <span class="token operator">=&gt;</span> <span class="token function">fetch</span><span class="token punctuation">(</span>apiUrl<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> </span>
<span class="line">			<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token string-property property">&#39;Accept&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html,application/xhtml+xml,application/xml;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token string-property property">&#39;User-Agent&#39;</span><span class="token operator">:</span> <span class="token string">&#39;cmliu/WorkerVless2sub&#39;</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token literal-property property">signal</span><span class="token operator">:</span> controller<span class="token punctuation">.</span>signal <span class="token comment">// 将AbortController的信号量添加到fetch请求中，以便于需要时可以取消请求</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span>ok <span class="token operator">?</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 遍历所有响应</span></span>
<span class="line">		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> response <span class="token keyword">of</span> responses<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">// 检查响应状态是否为&#39;fulfilled&#39;，即请求成功完成</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token comment">// 获取响应的内容</span></span>
<span class="line">				<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line">				newapi <span class="token operator">+=</span> content <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 无论成功或失败，最后都清除设置的超时定时器</span></span>
<span class="line">		<span class="token function">clearTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> newAddressesapi <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>newapi<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 返回处理后的结果</span></span>
<span class="line">	<span class="token keyword">return</span> newAddressesapi<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getAddressescsv</span><span class="token punctuation">(</span><span class="token parameter">tls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>addressescsv <span class="token operator">||</span> addressescsv<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	</span>
<span class="line">	<span class="token keyword">let</span> newAddressescsv <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	</span>
<span class="line">	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> csvUrl <span class="token keyword">of</span> addressescsv<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>csvUrl<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		</span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;获取CSV地址时出错:&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status<span class="token punctuation">,</span> response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		</span>
<span class="line">			<span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 使用正确的字符编码解析文本内容</span></span>
<span class="line">			<span class="token keyword">let</span> lines<span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;\\r\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">				lines <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\r\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">				lines <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		</span>
<span class="line">			<span class="token comment">// 检查CSV头部是否包含必需字段</span></span>
<span class="line">			<span class="token keyword">const</span> header <span class="token operator">=</span> lines<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> tlsIndex <span class="token operator">=</span> header<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;TLS&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> speedIndex <span class="token operator">=</span> header<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 最后一个字段</span></span>
<span class="line">		</span>
<span class="line">			<span class="token keyword">const</span> ipAddressIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// IP地址在 CSV 头部的位置</span></span>
<span class="line">			<span class="token keyword">const</span> portIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 端口在 CSV 头部的位置</span></span>
<span class="line">			<span class="token keyword">const</span> dataCenterIndex <span class="token operator">=</span> tlsIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 数据中心是 TLS 的后一个字段</span></span>
<span class="line">		</span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>tlsIndex <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;CSV文件缺少必需的字段&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		</span>
<span class="line">			<span class="token comment">// 从第二行开始遍历CSV行</span></span>
<span class="line">			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lines<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> columns <span class="token operator">=</span> lines<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		</span>
<span class="line">				<span class="token comment">// 检查TLS是否为&quot;TRUE&quot;且速度大于DLS</span></span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span>columns<span class="token punctuation">[</span>tlsIndex<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> tls <span class="token operator">&amp;&amp;</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>columns<span class="token punctuation">[</span>speedIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token constant">DLS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">const</span> ipAddress <span class="token operator">=</span> columns<span class="token punctuation">[</span>ipAddressIndex<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">const</span> port <span class="token operator">=</span> columns<span class="token punctuation">[</span>portIndex<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">const</span> dataCenter <span class="token operator">=</span> columns<span class="token punctuation">[</span>dataCenterIndex<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">					<span class="token keyword">const</span> formattedAddress <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ipAddress<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dataCenter<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">					newAddressescsv<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>formattedAddress<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;获取CSV地址时出错:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	</span>
<span class="line">	<span class="token keyword">return</span> newAddressescsv<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">ADD</span><span class="token punctuation">(</span><span class="token parameter">envadd</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">var</span> addtext <span class="token operator">=</span> envadd<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[	|&quot;&#39;\\r\\n]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 将空格、双引号、单引号和换行符替换为逗号</span></span>
<span class="line">	<span class="token comment">//console.log(addtext);</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>addtext<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> addtext <span class="token operator">=</span> addtext<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>addtext<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>addtext<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> addtext <span class="token operator">=</span> addtext<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> addtext<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> add <span class="token operator">=</span> addtext<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">//console.log(add);</span></span>
<span class="line">	<span class="token keyword">return</span> add <span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">nginx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">	&lt;!DOCTYPE html&gt;</span>
<span class="line">	&lt;html&gt;</span>
<span class="line">	&lt;head&gt;</span>
<span class="line">	&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span>
<span class="line">	&lt;style&gt;</span>
<span class="line">		body {</span>
<span class="line">			width: 35em;</span>
<span class="line">			margin: 0 auto;</span>
<span class="line">			font-family: Tahoma, Verdana, Arial, sans-serif;</span>
<span class="line">		}</span>
<span class="line">	&lt;/style&gt;</span>
<span class="line">	&lt;/head&gt;</span>
<span class="line">	&lt;body&gt;</span>
<span class="line">	&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span>
<span class="line">	&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span>
<span class="line">	working. Further configuration is required.&lt;/p&gt;</span>
<span class="line">	</span>
<span class="line">	&lt;p&gt;For online documentation and support please refer to</span>
<span class="line">	&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span>
<span class="line">	Commercial support is available at</span>
<span class="line">	&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span>
<span class="line">	</span>
<span class="line">	&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span>
<span class="line">	&lt;/body&gt;</span>
<span class="line">	&lt;/html&gt;</span>
<span class="line">	</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">	<span class="token keyword">return</span> text <span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> protocol<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">async</span> <span class="token function">fetch</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> env</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">TOKEN</span><span class="token punctuation">)</span> mytoken <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">//mytoken = env.TOKEN.split(&#39;,&#39;) || mytoken;</span></span>
<span class="line">		BotToken <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">TGTOKEN</span> <span class="token operator">||</span> BotToken<span class="token punctuation">;</span></span>
<span class="line">		ChatID <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">TGID</span> <span class="token operator">||</span> ChatID<span class="token punctuation">;</span> </span>
<span class="line">		subconverter <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">SUBAPI</span> <span class="token operator">||</span> subconverter<span class="token punctuation">;</span></span>
<span class="line">		subconfig <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">SUBCONFIG</span> <span class="token operator">||</span> subconfig<span class="token punctuation">;</span></span>
<span class="line">		FileName <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">SUBNAME</span> <span class="token operator">||</span> FileName<span class="token punctuation">;</span></span>
<span class="line">		EndPS <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">PS</span> <span class="token operator">||</span> EndPS<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> userAgentHeader <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> userAgent <span class="token operator">=</span> userAgentHeader <span class="token operator">?</span> userAgentHeader<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> format <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;format&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;format&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> host <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> uuid <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> sni <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> <span class="token constant">UD</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>timestamp <span class="token operator">-</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>timestamp <span class="token operator">*</span> <span class="token number">99</span> <span class="token operator">*</span> <span class="token number">1099511627776</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">UA</span><span class="token punctuation">)</span> MamaJustKilledAMan <span class="token operator">=</span> MamaJustKilledAMan<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">UA</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		total <span class="token operator">=</span> total <span class="token operator">*</span> <span class="token number">1099511627776</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">let</span> expire<span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>timestamp <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		link <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">LINK</span> <span class="token operator">||</span> link<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> links <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		link <span class="token operator">=</span> links<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		</span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">)</span> addresses <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADD</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDAPI</span><span class="token punctuation">)</span> addressesapi <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDAPI</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDNOTLS</span><span class="token punctuation">)</span> addressesnotls <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDNOTLS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDNOTLSAPI</span><span class="token punctuation">)</span> addressesnotlsapi <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDNOTLSAPI</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDCSV</span><span class="token punctuation">)</span> addressescsv <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">ADDCSV</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token constant">DLS</span> <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">DLS</span> <span class="token operator">||</span> <span class="token constant">DLS</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">/*</span>
<span class="line">		console.log(\`</span>
<span class="line">			addresses: \${addresses}</span>
<span class="line">			addressesapi: \${addressesapi}</span>
<span class="line">			addressesnotls: \${addressesnotls}</span>
<span class="line">			addressesnotlsapi: \${addressesnotlsapi}</span>
<span class="line">			addressescsv: \${addressescsv}</span>
<span class="line">			DLS: \${DLS}</span>
<span class="line">		\`);</span>
<span class="line">		*/</span></span>
<span class="line">		</span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">PROXYIP</span><span class="token punctuation">)</span> proxyIPs <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">PROXYIP</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">//console.log(proxyIPs);</span></span>
<span class="line"></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>mytoken<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> mytoken<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">token</span> <span class="token operator">=&gt;</span> url<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			host <span class="token operator">=</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">HOST</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> hosts <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token constant">ADD</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">HOST</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				host <span class="token operator">=</span> hosts<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> hosts<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			uuid <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">UUID</span> <span class="token operator">||</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">;</span></span>
<span class="line">			path <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">PATH</span> <span class="token operator">||</span> <span class="token string">&quot;/?ed=2560&quot;</span><span class="token punctuation">;</span></span>
<span class="line">			sni <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">SNI</span> <span class="token operator">||</span> host<span class="token punctuation">;</span></span>
<span class="line">			edgetunnel <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">ED</span> <span class="token operator">||</span> edgetunnel<span class="token punctuation">;</span></span>
<span class="line">			RproxyIP <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token constant">RPROXYIP</span> <span class="token operator">||</span> RproxyIP<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>host <span class="token operator">==</span> <span class="token string">&quot;null&quot;</span> <span class="token operator">||</span> uuid <span class="token operator">==</span> <span class="token string">&quot;null&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">let</span> 空字段<span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span>host <span class="token operator">==</span> <span class="token string">&quot;null&quot;</span> <span class="token operator">&amp;&amp;</span> uuid <span class="token operator">==</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">)</span> 空字段 <span class="token operator">=</span> <span class="token string">&quot;HOST/UUID&quot;</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>host <span class="token operator">==</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">)</span> 空字段 <span class="token operator">=</span> <span class="token string">&quot;HOST&quot;</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>uuid <span class="token operator">==</span> <span class="token string">&quot;null&quot;</span><span class="token punctuation">)</span> 空字段 <span class="token operator">=</span> <span class="token string">&quot;UUID&quot;</span><span class="token punctuation">;</span></span>
<span class="line">				EndPS <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> 订阅器内置节点 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>空字段<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 未设置！！！</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">const</span> hasSos <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;sos&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>hasSos<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> hy2Url <span class="token operator">=</span> <span class="token string">&quot;https://hy2sub.pages.dev&quot;</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">const</span> subconverterResponse <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>hy2Url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	</span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>subconverterResponse<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error fetching lzUrl: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverterResponse<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverterResponse<span class="token punctuation">.</span>statusText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">	</span>
<span class="line">					<span class="token keyword">const</span> base64Text <span class="token operator">=</span> <span class="token keyword">await</span> subconverterResponse<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					link <span class="token operator">+=</span> <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span> <span class="token function">atob</span><span class="token punctuation">(</span>base64Text<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 进行 Base64 解码</span></span>
<span class="line">	</span>
<span class="line">				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token comment">// 错误处理</span></span>
<span class="line">				<span class="token punctuation">}</span>	</span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token keyword">await</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token string">&quot;#获取订阅&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;CF-Connecting-IP&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">UA: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userAgentHeader<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/tg-spoiler&gt;\\n域名: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token punctuation">.</span>hostname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n&lt;tg-spoiler&gt;入口: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token punctuation">.</span>pathname <span class="token operator">+</span> url<span class="token punctuation">.</span>search<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/tg-spoiler&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">			host <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;host&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			uuid <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			path <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			sni <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;sni&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> host<span class="token punctuation">;</span></span>
<span class="line">			edgetunnel <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;edgetunnel&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> edgetunnel<span class="token punctuation">;</span></span>
<span class="line">			RproxyIP <span class="token operator">=</span> url<span class="token punctuation">.</span>searchParams<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;proxyip&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> RproxyIP<span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;/sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token comment">//首页改成一个nginx伪装页</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">nginx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html; charset=UTF-8&#39;</span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>host <span class="token operator">||</span> <span class="token operator">!</span>uuid<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> responseText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"></span>
<span class="line">			缺少必填参数：host 和 uuid</span>
<span class="line">			Missing required parameters: host and uuid</span>
<span class="line">			پارامترهای ضروری وارد نشده: هاست و یوآی‌دی</span>
<span class="line">			</span>
<span class="line">			</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token punctuation">.</span>origin<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/sub?host=[your host]&amp;uuid=[your uuid]&amp;path=[your path]</span>
<span class="line">			</span>
<span class="line">			</span>
<span class="line">			</span>
<span class="line">			</span>
<span class="line">			</span>
<span class="line">			</span>
<span class="line">				</span>
<span class="line">				https://github.com/cmliu/WorkerVless2sub</span>
<span class="line">				</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>responseText<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/plain; charset=utf-8&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>path <span class="token operator">||</span> path<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				path <span class="token operator">=</span> <span class="token string">&#39;/?ed=2560&#39;</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token comment">// 如果第一个字符不是斜杠，则在前面添加一个斜杠</span></span>
<span class="line">				path <span class="token operator">=</span> <span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> path <span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> path<span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		</span>
<span class="line">		noTLS <span class="token operator">=</span> host<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;notls&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> host<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;worker&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> host<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;trycloudflare&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> noTLS<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">NOTLS</span> <span class="token operator">==</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span>noTLS <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">		</span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;subconverter&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> MamaJustKilledAMan<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">PutAGunAgainstHisHeadPulledMyTriggerNowHesDead</span> <span class="token operator">=&gt;</span> userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>PutAGunAgainstHisHeadPulledMyTriggerNowHesDead<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> MamaJustKilledAMan<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">//首页改成一个nginx伪装页</span></span>
<span class="line">			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">nginx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html; charset=UTF-8&#39;</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;clash&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>format <span class="token operator">===</span> <span class="token string">&#39;clash&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;subconverter&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;nekobox&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;cf-workers-sub&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">const</span> subconverterUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverter<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/sub?target=clash&amp;url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;insert=false&amp;config=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>subconfig<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;emoji=true&amp;list=false&amp;tfo=false&amp;scv=true&amp;fdn=false&amp;sort=false&amp;new_name=true</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> subconverterResponse <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>subconverterUrl<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				</span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>subconverterResponse<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error fetching subconverterUrl: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverterResponse<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverterResponse<span class="token punctuation">.</span>statusText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">				</span>
<span class="line">				<span class="token keyword">const</span> subconverterContent <span class="token operator">=</span> <span class="token keyword">await</span> subconverterResponse<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				</span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>subconverterContent<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> </span>
<span class="line">						<span class="token string-property property">&quot;Content-Disposition&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">attachment; filename*=utf-8&#39;&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>FileName<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; filename=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>FileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token string-property property">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/plain; charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token string-property property">&quot;Profile-Update-Interval&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>SUBUpdateTime<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token string-property property">&quot;Subscription-Userinfo&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">upload=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; download=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; total=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>total<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; expire=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>expire<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/plain; charset=utf-8&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;sing-box&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;singbox&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>format <span class="token operator">===</span> <span class="token string">&#39;singbox&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;subconverter&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>userAgent<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;cf-workers-sub&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">const</span> subconverterUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverter<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/sub?target=singbox&amp;url=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;insert=false&amp;config=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>subconfig<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;emoji=true&amp;list=false&amp;tfo=false&amp;scv=true&amp;fdn=false&amp;sort=false&amp;new_name=true</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">const</span> subconverterResponse <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>subconverterUrl<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>subconverterResponse<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error fetching subconverterUrl: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverterResponse<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>subconverterResponse<span class="token punctuation">.</span>statusText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">				</span>
<span class="line">				<span class="token keyword">const</span> subconverterContent <span class="token operator">=</span> <span class="token keyword">await</span> subconverterResponse<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				</span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>subconverterContent<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> </span>
<span class="line">						<span class="token string-property property">&quot;Content-Disposition&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">attachment; filename*=utf-8&#39;&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>FileName<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; filename=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>FileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token string-property property">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/plain; charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token string-property property">&quot;Profile-Update-Interval&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>SUBUpdateTime<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">						<span class="token string-property property">&quot;Subscription-Userinfo&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">upload=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; download=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; total=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>total<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; expire=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>expire<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;content-type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/plain; charset=utf-8&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">if</span><span class="token punctuation">(</span>host<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;workers.dev&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> host<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;pages.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span>proxyhostsURL<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>proxyhostsURL<span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">					</span>
<span class="line">						<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;获取地址时出错:&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status<span class="token punctuation">,</span> response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">							<span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// 如果有错误，直接返回</span></span>
<span class="line">						<span class="token punctuation">}</span></span>
<span class="line">					</span>
<span class="line">						<span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> lines <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token comment">// 过滤掉空行或只包含空白字符的行</span></span>
<span class="line">						<span class="token keyword">const</span> nonEmptyLines <span class="token operator">=</span> lines<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">line</span> <span class="token operator">=&gt;</span> line<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					</span>
<span class="line">						proxyhosts <span class="token operator">=</span> proxyhosts<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>nonEmptyLines<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;获取地址时出错:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">				<span class="token comment">// 使用Set对象去重</span></span>
<span class="line">				proxyhosts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>proxyhosts<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">const</span> newAddressesapi <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAddressesapi</span><span class="token punctuation">(</span>addressesapi<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">const</span> newAddressescsv <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAddressescsv</span><span class="token punctuation">(</span><span class="token string">&#39;TRUE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			addresses <span class="token operator">=</span> addresses<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>newAddressesapi<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			addresses <span class="token operator">=</span> addresses<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>newAddressescsv<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">			<span class="token comment">// 使用Set对象去重</span></span>
<span class="line">			<span class="token keyword">const</span> uniqueAddresses <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>addresses<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">let</span> notlsresponseBody<span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span><span class="token punctuation">(</span>noTLS <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> newAddressesnotlsapi <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAddressesapi</span><span class="token punctuation">(</span>addressesnotlsapi<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">const</span> newAddressesnotlscsv <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getAddressescsv</span><span class="token punctuation">(</span><span class="token string">&#39;FALSE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				addressesnotls <span class="token operator">=</span> addressesnotls<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>newAddressesnotlsapi<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				addressesnotls <span class="token operator">=</span> addressesnotls<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>newAddressesnotlscsv<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">const</span> uniqueAddressesnotls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>addressesnotls<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">				notlsresponseBody <span class="token operator">=</span> uniqueAddressesnotls<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">address</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">let</span> port <span class="token operator">=</span> <span class="token string">&quot;80&quot;</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">let</span> addressid <span class="token operator">=</span> address<span class="token punctuation">;</span></span>
<span class="line">				</span>
<span class="line">					<span class="token keyword">const</span> match <span class="token operator">=</span> addressid<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">if</span> <span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token keyword">const</span> parts <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">							address <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">							<span class="token keyword">const</span> subParts <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">							port <span class="token operator">=</span> subParts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">							addressid <span class="token operator">=</span> subParts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token keyword">const</span> parts <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">							address <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">							port <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							<span class="token keyword">const</span> parts <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">							address <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">							addressid <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token punctuation">}</span></span>
<span class="line">					</span>
<span class="line">						<span class="token keyword">if</span> <span class="token punctuation">(</span>addressid<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							addressid <span class="token operator">=</span> addressid<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token punctuation">}</span></span>
<span class="line">					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">						address <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						port <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">||</span> port<span class="token punctuation">;</span></span>
<span class="line">						addressid <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">||</span> address<span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">	</span>
<span class="line">					<span class="token comment">//console.log(address, port, addressid);</span></span>
<span class="line"></span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>edgetunnel<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;cmliu&#39;</span> <span class="token operator">&amp;&amp;</span> RproxyIP<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token comment">// 将addressid转换为小写</span></span>
<span class="line">					<span class="token keyword">let</span> lowerAddressid <span class="token operator">=</span> addressid<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token comment">// 初始化找到的proxyIP为null</span></span>
<span class="line">					<span class="token keyword">let</span> foundProxyIP <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">						</span>
<span class="line">					<span class="token comment">// 遍历CMproxyIPs数组查找匹配项</span></span>
<span class="line">					<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> CMproxyIPs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">if</span> <span class="token punctuation">(</span>lowerAddressid<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							foundProxyIP <span class="token operator">=</span> item<span class="token punctuation">.</span>proxyIP<span class="token punctuation">;</span></span>
<span class="line">							<span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// 找到匹配项，跳出循环</span></span>
<span class="line">						<span class="token punctuation">}</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">						</span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>foundProxyIP<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token comment">// 如果找到匹配的proxyIP，赋值给path</span></span>
<span class="line">						path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/proxyIP=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>foundProxyIP<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token comment">// 如果没有找到匹配项，随机选择一个proxyIP</span></span>
<span class="line">						<span class="token keyword">const</span> randomProxyIP <span class="token operator">=</span> proxyIPs<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> proxyIPs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/proxyIP=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>randomProxyIP<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">					<span class="token keyword">const</span> vlessLink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vless://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>uuid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?encryption=none&amp;security=&amp;type=ws&amp;host=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;path=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>addressid <span class="token operator">+</span> EndPS<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">					<span class="token keyword">return</span> vlessLink<span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">const</span> responseBody <span class="token operator">=</span> uniqueAddresses<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">address</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">let</span> port <span class="token operator">=</span> <span class="token string">&quot;443&quot;</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">let</span> addressid <span class="token operator">=</span> address<span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">				<span class="token keyword">const</span> match <span class="token operator">=</span> addressid<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">const</span> parts <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						address <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">const</span> subParts <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						port <span class="token operator">=</span> subParts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						addressid <span class="token operator">=</span> subParts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">const</span> parts <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						address <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						port <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">const</span> parts <span class="token operator">=</span> address<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">						address <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						addressid <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				</span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>addressid<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						addressid <span class="token operator">=</span> addressid<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">					address <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					port <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">||</span> port<span class="token punctuation">;</span></span>
<span class="line">					addressid <span class="token operator">=</span> match<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">||</span> address<span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">				<span class="token comment">//console.log(address, port, addressid);</span></span>
<span class="line">		</span>
<span class="line">				<span class="token keyword">if</span> <span class="token punctuation">(</span>edgetunnel<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;cmliu&#39;</span> <span class="token operator">&amp;&amp;</span> RproxyIP<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token comment">// 将addressid转换为小写</span></span>
<span class="line">					<span class="token keyword">let</span> lowerAddressid <span class="token operator">=</span> addressid<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token comment">// 初始化找到的proxyIP为null</span></span>
<span class="line">					<span class="token keyword">let</span> foundProxyIP <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">				</span>
<span class="line">					<span class="token comment">// 遍历CMproxyIPs数组查找匹配项</span></span>
<span class="line">					<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> CMproxyIPs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">if</span> <span class="token punctuation">(</span>lowerAddressid<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">							foundProxyIP <span class="token operator">=</span> item<span class="token punctuation">.</span>proxyIP<span class="token punctuation">;</span></span>
<span class="line">							<span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token comment">// 找到匹配项，跳出循环</span></span>
<span class="line">						<span class="token punctuation">}</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				</span>
<span class="line">					<span class="token keyword">if</span> <span class="token punctuation">(</span>foundProxyIP<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token comment">// 如果找到匹配的proxyIP，赋值给path</span></span>
<span class="line">						path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/proxyIP=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>foundProxyIP<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">						<span class="token comment">// 如果没有找到匹配项，随机选择一个proxyIP</span></span>
<span class="line">						<span class="token keyword">const</span> randomProxyIP <span class="token operator">=</span> proxyIPs<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> proxyIPs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">						path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/proxyIP=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>randomProxyIP<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">				</span>
<span class="line">				<span class="token keyword">let</span> 伪装域名 <span class="token operator">=</span> host <span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">let</span> 最终路径 <span class="token operator">=</span> path <span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">let</span> 节点备注 <span class="token operator">=</span> EndPS <span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">if</span><span class="token punctuation">(</span>proxyhosts <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>host<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;.workers.dev&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> host<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;pages.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					最终路径 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">					伪装域名 <span class="token operator">=</span> proxyhosts<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> proxyhosts<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">					节点备注 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>EndPS<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 已启用临时域名中转服务，请尽快绑定自定义域！</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">					sni <span class="token operator">=</span> 伪装域名<span class="token punctuation">;</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">				<span class="token keyword">const</span> vlessLink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vless://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>uuid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>address<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?encryption=none&amp;security=tls&amp;sni=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sni<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;fp=random&amp;type=ws&amp;host=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>伪装域名<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;path=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>最终路径<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>addressid <span class="token operator">+</span> 节点备注<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">				<span class="token keyword">return</span> vlessLink<span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">let</span> combinedContent <span class="token operator">=</span> responseBody<span class="token punctuation">;</span> <span class="token comment">// 合并内容</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>link<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				combinedContent <span class="token operator">+=</span> <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span> link<span class="token punctuation">;</span></span>
<span class="line">				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;link: &quot;</span> <span class="token operator">+</span> link<span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>notlsresponseBody<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				combinedContent <span class="token operator">+=</span> <span class="token string">&#39;\\n&#39;</span> <span class="token operator">+</span> notlsresponseBody<span class="token punctuation">;</span></span>
<span class="line">				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;notlsresponseBody: &quot;</span> <span class="token operator">+</span> notlsresponseBody<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			</span>
<span class="line">			<span class="token keyword">const</span> base64Response <span class="token operator">=</span> <span class="token function">btoa</span><span class="token punctuation">(</span>combinedContent<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 重新进行 Base64 编码</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>base64Response<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> </span>
<span class="line">					<span class="token comment">//&quot;Content-Disposition&quot;: \`attachment; filename*=utf-8&#39;&#39;\${encodeURIComponent(FileName)}; filename=\${FileName}\`,</span></span>
<span class="line">					<span class="token string-property property">&quot;content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/plain; charset=utf-8&quot;</span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token string-property property">&quot;Profile-Update-Interval&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>SUBUpdateTime<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">					<span class="token string-property property">&quot;Subscription-Userinfo&quot;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">upload=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; download=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; total=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>total<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">; expire=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>expire<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">			<span class="token keyword">return</span> response<span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return a(),s("div",null,o)}const k=n(p,[["render",c],["__file","hel4.html.vue"]]),r=JSON.parse('{"path":"/article/cloudflare/workers/hel4.html","title":"hel4 code","lang":"zh-CN","frontmatter":{"date":"2022-12-21T00:00:00.000Z","category":["VPN"],"tag":["Cloudflare","Workers"]},"headers":[],"git":{"createdTime":1717494283000,"updatedTime":1717494283000,"contributors":[{"name":"jikenu","email":"2961819202@qq.com","commits":1}]},"readingTime":{"minutes":8.85,"words":2654},"filePathRelative":"article/cloudflare/workers/hel4.md","localizedDate":"2022年12月21日","excerpt":"<p>hel4 代码日志 cmliu/WorkerVless2sub</p>\\n"}');export{k as comp,r as data};
